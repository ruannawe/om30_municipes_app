c
mail.from
c
@citizen
c
Citizen.new(citizen_params).valid?
citizen_params
c
@citizen.address
@citizen
c
citizen_params
c
citizen_params
continue
@citizen.address
@citizen
c
@citizen.save!
@citizen.valid?
CitizenMailer.welcome_email(@citizen).deliver_now
@citizen.valid?
@citizen = Citizen.new(citizen_params)
c
CitizenMailer.welcome_email(@citizen).deliver_now
UserMailer.welcome_email(@citizen).deliver_now
@citizen.valid?
@citizen = Citizen.new(citizen_params)
@citizen.valid?
c
citizen_params
@citizen.errors
@citizen.valid?
@citizen = Citizen.new(citizen_params)
c
valid_cns_number?(national_health_card)
valid_cns_format?(national_health_card)
c
citizen
citizen = create(:citizen, national_health_card: '239233310000000')
create(:citizen, national_health_card: '239233310000000')
c
cz = create(:citizen, national_health_card: '239233319950009')
cz = create(:citizen)
citizen
c
citizen.errors[:national_health_card]
c
citizen.errors[:national_health_card]
c
citizen.errors[:birthdate]
c
citizen.errors[:birthdate]
citizen.errors
citizen.valid?
c
continue
@citizen.birthdate
@citizen.birthdate.is_a?(Date)
@citizen = Citizen.new(citizen_params)
params
c
citizen
continue
@citizen.status = false
@citizen1.status = false
@citizen.save!
@citizen = Citizen.new(citizen_params)
citizen_params
continue
@citizen1.save!
@citizen1.status = false
citizen_params
@citizen1.save!
@citizen1.valid?
@citizen1 = Citizen.new(citizen_params)
citizen_params['email'] = 'ruannawe95*2@gmail.com'
citizen_params['email'] = 'ruannawe95*1@gmail.com'
citizen_params['tax_id'] = '04137644192'
@citizen1 = Citizen.new(citizen_params)
citizen_params['status'] = '0'
@citizen
@citizen.save!
@citizen
@citizen.status = true
@citizen.status
@citizen = Citizen.new(citizen_params)
citizen_params['status']
@citizen = Citizen.new(citizen_params)
citizen_params['status'] = '1'
citizen_params['status'] = 1
citizen_params['status']
@citizen.save!
@citizen
citizen_params
@citizen.save!
@citizen.save
@citizen = Citizen.new(citizen_params)
citizen_params['address_attributes']['zip_code']
citizen_params['address_attributes']
citizen_params['full_name']
require pp
pp citizen_params
citizen_params
continue
Citizen.filter(csp)
    csp = citizen_search_params.reject { |key, value| value.blank? }
Citizen.filter(csp)
    csp = citizen_search_params
Citizen.filter(csp)
citizen_search_params
continue
params
citizen_search_params
continue
params
citizen_params
c
params
c
params
citizen_params
c
citizen_params
params
citizen_params
c
continue
params
cp
citizen_params
c
params
citizen_params
cp
c
params
params[:citizen]
!params[:citizen].present?
c
!params[:citizen].present?
params
params.require(:citizen)
c
!params[:citizen].present?
params[:citizen]
c
@citizen.update(citizen_params)
@citizen = Citizen.find(params[:id])
citizen_params
c
!params[:citizen].present?
c
continue
c
!params[:citizen].present?
params[:citizen].present?
params[:citizen].empty?
params[:citizen]
c
cparams[:citizen].present?
params[:citizen].present?
!params[:citizen].present?
params[:citizen].present?
citizen_params
c
citizen_params
params[:citizen]
c
params[:citizen]
params
citizen_params
c
nil.present?
citizen_params[:address_attributes]
citizen_params
c
params
c
citizen_params
@citizen.update(citizen_params)
@citizen = Citizen.find(params[:id])
c
@citizen.update(citizen_params)
@citizen = Citizen.find(params[:id])
params
citizen_params
params
params[:id]
c
!nil
params[:citizen]&.empty?
c
continue
c
continue
c
n
flash[:alert]
c
flash.any?
flash
c
flash.each { |key, message| puts message.to_s[1] }
flash.each { |key, message| puts message.to_s[0] }
flash.each { |key, message| puts message.to_s }
flash.each { |key, message| puts message.to_string }
flash.each { |key, message| puts key }
flash.each { |key, message| puts message.class }
flash.each { |key, message| puts 'aa ' + message['alert'] }
flash.each { |key, message| puts 'aa ' + message }
flash.each { |key, message| puts message }
flash.any?
flash
c
message.present?
message
c
@citizen.save!
c
n
params[:citizen].empty?
!params[:citizen].present?
params[:citizen].present?
c
@citizen.save!
@citizen.save
citizen_params
continue
c
@citizen.save!
n
citizen_params
continue
citizen_params
params
citizen_params
@citizen.save!
n
continue
reload!
@citizen.save!
@citizen.save
n
continue
@citizen.save!
@citizen.erros
@citizen.valid?
@citizen = Citizen.new(citizen_params)
c
address_params
citizen_params
c
params
params['bla'] = 123
params&.require(:citizen)
